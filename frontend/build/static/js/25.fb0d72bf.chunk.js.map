{"version":3,"file":"static/js/25.fb0d72bf.chunk.js","mappings":"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","sources":["product/component/Updatecustomerorder/Forminput.jsx","product/pages/Updatecustomerorder.js","shared/components/FormElements/Input.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n// import { AuthContext } from '../../../shared/context/auth-context'\r\nimport { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\n// import Card from '../../../shared/components/UIElements/Card'\r\n\r\nconst Forminput = () => {  \r\n  const[loadedUsers, setLoadedUsers]= useState([])\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  // const auth= useContext(AuthContext)\r\nconst navigate= useNavigate()\r\nconst orderId= useParams().oid;\r\nconst auth= useContext(AuthContext);\r\n\r\nconst{  \r\n  value:quantityinput,\r\n  entervalueisvalid:enterquantityisvalid,\r\n  haserror:quantityinputisvalid,\r\n  valuechangehandler:quantitychangehandler,\r\n  valueblurhandler:quantityblurhandler,  \r\n  reset:resetquantity\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst quantityref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enterquantityisvalid){\r\n  formisvalid=true\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  const sendrequest = async () => {\r\n    // setIsLoading(true);       \r\n    try {\r\n     const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`);\r\n\r\n     setLoadedUsers(responseData.order);\r\n      // auth.customerlogin(responseData.customer.id)\r\n      console.log(responseData.order)\r\n    } catch (err) {}\r\n  };\r\n  sendrequest();\r\n}, [sendRequest, orderId]);\r\n\r\n\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    \r\n\r\nif(!enterquantityisvalid){\r\n  return;  \r\n}\r\nresetquantity()\r\n\r\n\r\ntry {\r\n  await sendRequest(\r\n    process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`,\r\n    'PATCH',\r\n    JSON.stringify({\r\n      amount:quantityinput\r\n    }),\r\n    {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  );\r\n  // auth.login(responseData.user.id);\r\n  navigate(`/${auth.customerId}/customerorder`)\r\n} catch (err) {}\r\n}\r\n\r\n\r\nconst deleteorder=async()=>{\r\n  try {\r\n    await sendRequest(\r\n      process.env.REACT_APP_BACKEND_URL +`/orders/${orderId}`,\r\n      'DELETE');\r\n    // auth.delet()\r\n    \r\n  navigate(`/${auth.customerId}/customerorder`)\r\n  } catch (err) {}\r\n}\r\n\r\n  const quantityinputonclasses= quantityinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  \r\n  return (\r\n    <>    \r\n    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n\r\n        <h2>Upload New Products</h2>\r\n\r\n\r\n    <div className='form_input_div'>\r\n    <form onSubmit={submithandler}>\r\n\r\n<div className={quantityinputonclasses}>\r\n      <Input\r\n      id=\"QUANTITY\"\r\n      type='number' \r\n        ref={quantityref}\r\n        onChange={quantitychangehandler}\r\n        onBlur={quantityblurhandler}\r\n        value={quantityinput || loadedUsers.amount}\r\n      />\r\n      {quantityinputisvalid && <p>enter valid quantity</p>}\r\n      </div>\r\n      <Button disabled={!formisvalid}>Update</Button>\r\n      {/* <Button to ='/sellerlogin'>Edit</Button> */}\r\n      <Button onClick ={deleteorder}>Delete</Button>\r\n    </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nimport Forminput from '../component/Updatecustomerorder/Forminput'\r\n\r\nconst Updatecustomerorder = () => {\r\n  return (\r\n    <>\r\n        <Forminput/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Updatecustomerorder\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks"],"names":["useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","navigate","useNavigate","orderId","useParams","oid","auth","useContext","AuthContext","useCustomhooks","val","trim","quantityinput","value","enterquantityisvalid","entervalueisvalid","quantityinputisvalid","haserror","quantitychangehandler","valuechangehandler","quantityblurhandler","valueblurhandler","resetquantity","reset","quantityref","useRef","formisvalid","useEffect","sendrequest","process","responseData","order","console","log","submithandler","event","preventDefault","JSON","stringify","amount","customerId","deleteorder","quantityinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","className","onSubmit","Input","id","type","ref","onChange","onBlur","Button","disabled","onClick","props","htmlFor","style","width","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","state","action","validatevalue","useReducer","inputstate","dispatch","target"],"sourceRoot":""}