{"version":3,"file":"static/js/916.7adf704d.chunk.js","mappings":"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","sources":["product/component/customerorder/Customerorderlist.js","product/component/customerorder/Customerorder.js","product/pages/Customerorderpage.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js"],"sourcesContent":["import React from 'react'\r\nimport './Customerorderlist.css'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport { NavLink } from 'react-router-dom'\r\n// import { useParams } from 'react-router-dom'\r\n// import Modal from '../../../shared/components/UIElements/Modal' \r\n// import { useContext } from 'react'\r\n// import { AuthContext } from '../../../shared/context/auth-context'\r\n// import { useHttpClient } from '../../../shared/hooks/http-hook'\r\n// import ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\n// import LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\n// import Card from '../../../shared/components/UIElements/Card'\r\n\r\nconst Customerorderlist = (props) => {\r\n\r\n\r\n  return (\r\n    <>\r\n       \r\n\r\n       <div className='productlist'>\r\n    \r\n    \r\n    <table style={{margin:\"-15px\"}}>\r\n    <ul><li>\r\n    \r\n        <tr >\r\n        {/* <td>\r\n        <ol>\r\n          <li>  <tr><td style={{width:\"200px\", fontWeight:\"bold\"}}>NAME</td><td>{loadedUsers.name}</td></tr></li>\r\n         <li><tr><td style={{width:\"200px\", fontWeight:\"bold\"}}>EMAIL</td><td>{loadedUsers.email}</td></tr></li>   \r\n         <li><tr><td style={{width:\"200px\", fontWeight:\"bold\"}}>MOBILE</td><td>{loadedUsers.mobile}</td></tr></li>  \r\n            </ol>\r\n            </td>  */}\r\n            {/* <td >{props.name}</td>  */}\r\n            <td >{props.title}</td> \r\n            <td>{props.description}</td> \r\n            <td>{props.price}</td>  \r\n            <td>{props.amount}</td>\r\n            {/* <td>{props.orders.id}</td> */}\r\n            <td><NavLink to={`/${props.id}/updatecustomerorder`}>‚úíÔ∏è</NavLink></td>  \r\n            <td><NavLink to={`/${props.id}/updatecustomerorder`}>üóëÔ∏è</NavLink></td> \r\n            \r\n        <td><img style={{width:\"100%\"}} src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt=\"\" /></td>          \r\n        </tr>\r\n        </li>\r\n        </ul>\r\n    </table>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Customerorderlist\r\n","import React, {  useEffect, useState } from 'react'\r\nimport {  useParams } from 'react-router-dom';\r\nimport Card from '../../../shared/components/UIElements/Card';\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\r\n// import { AuthContext } from '../../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\nimport Customerorderlist from './Customerorderlist';\r\nimport './Customerorderlist.css'\r\n\r\nconst Selleruploadedproduct = () => {\r\n\r\n    const[loadedUsers, setLoadedUsers]= useState([])\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    // const auth= useContext(AuthContext)\r\n  // const navigate= useNavigate()\r\n  const customerId= useParams().cid;\r\n\r\n    useEffect(() => {\r\n        const sendrequest = async () => {\r\n          // setIsLoading(true);       \r\n          try {\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/orders/customer/${customerId}`);\r\n      \r\n           setLoadedUsers(responseData.orders);\r\n            // auth.customerlogin(responseData.customer.id)\r\n            console.log(responseData.orders)\r\n          } catch (err) {}\r\n        };\r\n        sendrequest();\r\n      }, [sendRequest, customerId]);\r\n\r\n\r\n      if (loadedUsers.length === 0) {\r\n        return (\r\n          <div className=\"center\">\r\n            <Card>\r\n              <h2 style={{color:\"white\", textDecoration:\"none\"}}>No Orders Found.</h2>\r\n            </Card>\r\n          </div>\r\n        );\r\n      }\r\n         \r\n\r\n  return (\r\n    <>\r\n        \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n        <div className='productlist1' style={{margin:\"-10px\"}}>\r\n          <ul ><li>\r\n          <tr style={{fontWeight:\"bold\"}} >\r\n        {/* <td>DELIVER ADDRESS</td> */}\r\n            {/* <td >NAME</td>  */}\r\n            <td >TITLE</td> \r\n            <td >DESCRIPTION</td> \r\n            <td >PRICE</td>   \r\n            <td >QUANTITY</td>\r\n            <td >EDIT</td> \r\n            <td >DELETE</td>\r\n            <td >IMAGE</td>\r\n    \r\n          </tr></li></ul>\r\n        </div>\r\n\r\n{\r\n  loadedUsers.map((p)=>{\r\n    return <Customerorderlist\r\n    key={p.id}\r\n    id={p.id}\r\n    name={p.name}\r\n      title = {p.title}\r\n      description= {p.description}\r\n      image={p.image}\r\n      amount={p.amount}\r\n      creator={p.creator}\r\n      price={p.price}\r\n      quantity={p.quantity}\r\n    />\r\n  }\r\n  )\r\n}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Selleruploadedproduct\r\n","import React from 'react'\r\nimport Customerorder from '../component/customerorder/Customerorder'\r\n\r\nconst Customerorderpage = () => {\r\n\r\n  return (\r\n    <>\r\n        <Customerorder/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Customerorderpage\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n"],"names":["props","className","style","margin","title","description","price","amount","to","id","width","src","process","image","alt","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","customerId","useParams","cid","useEffect","sendrequest","responseData","orders","console","log","length","Card","color","textDecoration","ErrorModal","onClear","LoadingSpinner","asOverlay","fontWeight","map","p","name","creator","quantity","Customerorder","children","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onClick","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button"],"sourceRoot":""}