{"version":3,"file":"static/js/576.883149ac.chunk.js","mappings":"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","sources":["product/component/sellerorder/Sellerorderlist.js","product/component/sellerorder/Sellerorder.js","product/pages/Sellerorderpage.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Sellerproductlist.css'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\n// import { useNavigate, useParams } from 'react-router-dom'\r\n// import { useContext } from 'react'\r\n// import { AuthContext } from '../../../shared/context/auth-context'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Sellerproductlist = (props) => {\r\n  const[loadedUsers, setLoadedUsers]= useState([])\r\n  const { sendRequest } = useHttpClient();\r\n//   const auth= useContext(AuthContext)\r\n// const navigate= useNavigate()\r\n// const userId= useParams().uid;\r\n\r\n  useEffect(() => {\r\n      const sendrequest = async () => {\r\n        // setIsLoading(true);       \r\n        try {\r\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/customers/${props.creator}`);\r\n    \r\n         setLoadedUsers(responseData.customer);\r\n          // auth.customerlogin(responseData.customer.id)\r\n          console.log(responseData.customer)\r\n        } catch (err) {}\r\n      };\r\n      sendrequest();\r\n    }, [sendRequest, props.creator]);\r\n    \r\n     \r\n  return (\r\n    <>\r\n\r\n    <div className='productlist'>    \r\n    \r\n        <table style={{margin:\"-20px\"}}>\r\n        <ul>\r\n        <li>\r\n        \r\n            <tr>\r\n\r\n            <td>\r\n            <ol>\r\n              <li>  <tr><td style={{width:\"00px\", fontWeight:\"bold\"}}>NAME:</td><td>{loadedUsers.name}</td></tr></li>\r\n             <li><tr><td style={{width:\"0px\", fontWeight:\"bold\"}}>EMAIL:</td><td>{loadedUsers.email}</td></tr></li>   \r\n             <li><tr><td style={{width:\"0px\", fontWeight:\"bold\"}}>MOBILE:</td><td>{loadedUsers.mobile}</td></tr></li>  \r\n                </ol>\r\n                </td> \r\n\r\n                {/* <td >{props.name}</td>  */}\r\n                <td>{props.title}</td> \r\n                <td>{props.description}</td> \r\n                <td>{props.price}</td>  \r\n                <td>{props.amount}</td>\r\n                <td><NavLink to={`/${props.id}/Updatesellerproduct`}>‚úíÔ∏è</NavLink></td>  \r\n                <td><NavLink to={`/${props.id}/Updatesellerproduct`}>üóëÔ∏è</NavLink></td> \r\n                \r\n            <td><img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt=\"\" /></td>          \r\n            </tr></li>\r\n            </ul>\r\n        </table>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sellerproductlist\r\n","import React, {useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Card from '../../../shared/components/UIElements/Card';\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\r\n// import { AuthContext } from '../../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\nimport Sellerproductlist from './Sellerorderlist';\r\nimport './Sellerproductlist.css'\r\n\r\nconst Sellerorderitem = () => {\r\n\r\n    const[loadedUsers, setLoadedUsers]= useState([])\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  //   const auth= useContext(AuthContext)\r\n  // const navigate= useNavigate()\r\n  const userId= useParams().uid;\r\n\r\n    useEffect(() => {\r\n        const sendrequest = async () => {\r\n          // setIsLoading(true);       \r\n          try {\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/orders/productcreator/${userId}`);\r\n      \r\n           setLoadedUsers(responseData.orders);\r\n            // auth.customerlogin(responseData.customer.id)\r\n            console.log(responseData.orders)\r\n          } catch (err) {}\r\n        };\r\n        sendrequest();\r\n      }, [sendRequest, userId]);\r\n\r\n\r\n\r\n      if (loadedUsers.length === 0) {\r\n        return (\r\n          <div className=\"center\">\r\n            <Card >\r\n              <h2 style={{\"color\":\"white\", \"textDecoration\":\"none\"}}>No Order Found.</h2>\r\n            </Card>\r\n          </div>\r\n        );\r\n      }\r\n    \r\n      \r\n  return (\r\n    <>\r\n        \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h1 style={{justifyContent:\"center\", textAling:\"center\", display:\"flex\"}}>Recent Order</h1>\r\n\r\n<div className='productlist1'>\r\n<ul><li>\r\n        <tr style={{fontWeight:\"bold\"}}>\r\n            <td>DELIVER ADDRESS</td>\r\n                {/* <td >NAME</td>  */}\r\n                <td>TITLE</td> \r\n                <td>DESCRIPTION</td> \r\n                <td>PRICE</td> \r\n                <td>QUANTITY</td>  \r\n                <td>EDIT</td> \r\n                <td>DELETE</td>\r\n                <td>IMAGE</td>\r\n        </tr>\r\n        </li></ul>\r\n        </div>\r\n        \r\n{\r\n  loadedUsers.map((p)=>{\r\n    return <Sellerproductlist\r\n    key={p.id}\r\n    id={p.id}\r\n    name={p.name}\r\n      title = {p.title}\r\n      image={p.image}\r\n      amount={p.amount}\r\n      description= {p.description}\r\n      price={p.price}\r\n      creator={p.creator}\r\n    />\r\n  }\r\n  )\r\n}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sellerorderitem\r\n","import React from 'react'\r\nimport Sellerorderitem from '../component/sellerorder/Sellerorder'\r\n\r\nconst Sellerorderpage = () => {\r\n  return (\r\n    <div>\r\n      <Sellerorderitem/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sellerorderpage\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n"],"names":["props","useState","loadedUsers","setLoadedUsers","sendRequest","useHttpClient","useEffect","sendrequest","process","creator","responseData","customer","console","log","className","style","margin","width","fontWeight","name","email","mobile","title","description","price","amount","to","id","src","image","alt","isLoading","error","clearError","userId","useParams","uid","orders","length","Card","ErrorModal","onClear","LoadingSpinner","asOverlay","justifyContent","textAling","display","map","p","Sellerorder","children","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onClick","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button"],"sourceRoot":""}