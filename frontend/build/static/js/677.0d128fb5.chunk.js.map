{"version":3,"file":"static/js/677.0d128fb5.chunk.js","mappings":"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","sources":["Seller/component/update/Forminput.jsx","shared/components/FormElements/Input.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\nimport { useEffect } from 'react'\r\n\r\nconst Forminput = () => {  \r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState([]);\r\n  const auth= useContext(AuthContext)\r\n  const userId= useParams().uid;\r\nconst navigate= useNavigate()\r\n\r\nconst{  \r\n  value:nameinput,\r\n  entervalueisvalid:enternameisvalid,\r\n  haserror:nameinputisvalid,\r\n  valuechangehandler:namechangehandler,\r\n  valueblurhandler:nameblurhandler,\r\n  reset:resetname\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:emailinput,\r\n  entervalueisvalid:enteremailisvalid,\r\n  haserror:emailinputisvalid,\r\n  valuechangehandler:emailchangehandler,\r\n  valueblurhandler:emailblurhandler,  \r\n  reset:resetemail\r\n} =useCustomhooks(val=>val.includes(\"@\"))\r\n\r\nconst{  \r\n  value:mobileinput,\r\n  entervalueisvalid:entermobileisvalid,\r\n  haserror:mobileinputisvalid,\r\n  valuechangehandler:mobilechangehandler,\r\n  valueblurhandler:mobileblurhandler,  \r\n  reset:resetmobile\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:passwordinput,\r\n  entervalueisvalid:enterpasswordisvalid,\r\n  haserror:passwordinputisvalid,\r\n  valuechangehandler:passwordchangehandler,\r\n  valueblurhandler:passwordblurhandler,  \r\n  reset:resetpassword\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\n\r\nconst nameref= useRef()\r\nconst emailref= useRef()\r\nconst mobileref= useRef()\r\nconst passwordref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enternameisvalid && enteremailisvalid && entermobileisvalid && enterpasswordisvalid ){\r\n  formisvalid=true\r\n}\r\n\r\nuseEffect(() => {\r\n  const sendrequest = async () => {\r\n    // setIsLoading(true);       \r\n    try {\r\n      const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/users/${userId}`);\r\n\r\n     setLoadedUsers(responseData.users);\r\n      // auth.login(responseData.users.name)\r\n      console.log(responseData.users)\r\n    } catch (err) {}\r\n  };\r\n  sendrequest();\r\n}, [sendRequest,userId]);\r\n\r\n\r\n\r\n// console.log(auth)\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    // console.log(nameref.current.value)\r\n    \r\nif(!enternameisvalid){\r\n  return;  \r\n}\r\nif(!enteremailisvalid){\r\n  return;  \r\n}\r\nif(!entermobileisvalid){\r\n  return;  \r\n}\r\nif(!enterpasswordisvalid){\r\n  return;  \r\n}\r\nresetname()\r\nresetemail()\r\nresetmobile()\r\nresetpassword()\r\n\r\ntry {\r\n  await sendRequest(\r\n    process.env.REACT_APP_BACKEND_URL +`/users/${userId}`,\r\n    'PATCH',\r\n    JSON.stringify({\r\n      email: emailinput,\r\n      name: nameinput,\r\n      mobile: mobileinput,\r\n      password: passwordinput\r\n    }),\r\n    {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  );\r\n  // auth.login(responseData.user.id);\r\n  \r\n  navigate(\"/sellerlogin\")\r\n} catch (err) {}\r\n}\r\n\r\n\r\nconst deleteuser=async()=>{\r\n  try {\r\n     await sendRequest(\r\n      process.env.REACT_APP_BACKEND_URL +`/users/${userId}`,\r\n      'DELETE');\r\n    auth.delet()\r\n    navigate(\"/sellerregistration\")\r\n  } catch (err) {}\r\n}\r\n\r\n\r\n  const nameinputonclasses= nameinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const mobileinputonclasses= mobileinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const emailinputonclasses= emailinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const passwordinputonclasses= passwordinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  return (\r\n    <>    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Edit Users</h2>\r\n\r\n    <div className='form_input_div'>\r\n    <form onSubmit={submithandler}>\r\n\r\n      <div className={nameinputonclasses}>\r\n      <Input\r\n      id=\"NAME\"\r\n        ref={nameref}\r\n        onChange={namechangehandler}\r\n        onBlur={nameblurhandler}\r\n        value={nameinput || loadedUsers.name}\r\n      />\r\n      {nameinputisvalid && <p>enter valid name</p>}\r\n      </div>\r\n\r\n      <div className={emailinputonclasses}>\r\n      <Input\r\n      id=\"EMAIL\"\r\n        ref={emailref}\r\n        onChange={emailchangehandler}\r\n        onBlur={emailblurhandler}\r\n        value={emailinput || loadedUsers.email}\r\n      />\r\n      {emailinputisvalid && <p>enter valid email</p>}\r\n      </div>\r\n      \r\n      \r\n      <div className={mobileinputonclasses}>\r\n      <Input\r\n      id=\"MOBILE\"\r\n        ref={mobileref}\r\n        onChange={mobilechangehandler}\r\n        onBlur={mobileblurhandler}\r\n        value={mobileinput || loadedUsers.mobile}\r\n      />\r\n      {mobileinputisvalid && <p>enter valid mobile</p>}\r\n      </div>\r\n\r\n      <div className={passwordinputonclasses}>\r\n      <Input\r\n      id=\"PASSWORD\"\r\n        ref={passwordref}\r\n        onChange={passwordchangehandler}\r\n        onBlur={passwordblurhandler}\r\n        value={passwordinput || loadedUsers.password}\r\n      />\r\n      {passwordinputisvalid && <p>enter valid password</p>}\r\n      </div>\r\n      \r\n      <Button disabled={!formisvalid}>Update</Button>\r\n      <Button onClick={deleteuser}>Delete</Button>\r\n    </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks"],"names":["useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","auth","useContext","AuthContext","userId","useParams","uid","navigate","useNavigate","useCustomhooks","val","trim","nameinput","value","enternameisvalid","entervalueisvalid","nameinputisvalid","haserror","namechangehandler","valuechangehandler","nameblurhandler","valueblurhandler","resetname","reset","includes","emailinput","enteremailisvalid","emailinputisvalid","emailchangehandler","emailblurhandler","resetemail","mobileinput","entermobileisvalid","mobileinputisvalid","mobilechangehandler","mobileblurhandler","resetmobile","passwordinput","enterpasswordisvalid","passwordinputisvalid","passwordchangehandler","passwordblurhandler","resetpassword","nameref","useRef","emailref","mobileref","passwordref","formisvalid","useEffect","sendrequest","process","responseData","users","console","log","submithandler","event","preventDefault","JSON","stringify","email","name","mobile","password","deleteuser","delet","nameinputonclasses","mobileinputonclasses","emailinputonclasses","passwordinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","className","onSubmit","Input","id","ref","onChange","onBlur","Button","disabled","onClick","props","htmlFor","style","width","type","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","state","action","validatevalue","useReducer","inputstate","dispatch","target"],"sourceRoot":""}