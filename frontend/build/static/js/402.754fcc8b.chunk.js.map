{"version":3,"file":"static/js/402.754fcc8b.chunk.js","mappings":"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","sources":["product/component/Updatesellerproduct/Forminput.jsx","product/pages/Updatesellerproduct.js","shared/components/FormElements/Input.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\nimport { useState } from 'react'\r\n// import Card from '../../../shared/components/UIElements/Card'\r\n\r\nconst Forminput = () => {  \r\n  const[loadedUsers, setLoadedUsers]= useState([])\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth= useContext(AuthContext)\r\nconst navigate= useNavigate()\r\nconst placeId= useParams().pid;\r\n\r\nconst{  \r\n  value:nameinput,\r\n  entervalueisvalid:enternameisvalid,\r\n  haserror:nameinputisvalid,\r\n  valuechangehandler:namechangehandler,\r\n  valueblurhandler:nameblurhandler,\r\n  reset:resetname\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:titleinput,\r\n  entervalueisvalid:entertitleisvalid,\r\n  haserror:titleinputisvalid,\r\n  valuechangehandler:titlechangehandler,\r\n  valueblurhandler:titleblurhandler,  \r\n  reset:resettitle\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:descriptioninput,\r\n  entervalueisvalid:enterdescriptionisvalid,\r\n  haserror:descriptioninputisvalid,\r\n  valuechangehandler:descriptionchangehandler,\r\n  valueblurhandler:descriptionblurhandler,  \r\n  reset:resetdescription\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:priceinput,\r\n  entervalueisvalid:enterpriceisvalid,\r\n  haserror:priceinputisvalid,\r\n  valuechangehandler:pricechangehandler,\r\n  valueblurhandler:priceblurhandler,  \r\n  reset:resetprice\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\n\r\nconst nameref= useRef()\r\nconst titleref= useRef()\r\nconst descriptionref= useRef()\r\nconst priceref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enternameisvalid && entertitleisvalid && enterdescriptionisvalid && enterpriceisvalid ){\r\n  formisvalid=true\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  const sendrequest = async () => {\r\n    // setIsLoading(true);       \r\n    try {\r\n      const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL +`/places/${placeId}`);\r\n\r\n     setLoadedUsers(responseData.place);\r\n      // auth.customerlogin(responseData.customer.id)\r\n      console.log(responseData.place)\r\n    } catch (err) {}\r\n  };\r\n  sendrequest();\r\n}, [sendRequest, placeId]);\r\n\r\n\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    // console.log(nameref.current.value)\r\n    \r\nif(!enternameisvalid){\r\n  return;  \r\n}\r\nif(!entertitleisvalid){\r\n  return;  \r\n}\r\nif(!enterdescriptionisvalid){\r\n  return;  \r\n}\r\nif(!enterpriceisvalid){\r\n  return;  \r\n}\r\nresetname()\r\nresettitle()\r\nresetdescription()\r\nresetprice()\r\n\r\n\r\ntry {\r\n  await sendRequest(\r\n    process.env.REACT_APP_BACKEND_URL +`/places/${placeId}`,\r\n    'PATCH',\r\n    JSON.stringify({\r\n      name: nameinput,\r\n      title: titleinput,\r\n      description: descriptioninput,\r\n      price: priceinput\r\n    }),\r\n    {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + auth.token\r\n    }\r\n  );\r\n  // auth.login(responseData.user.id);\r\n  navigate(\"/sellerlogin\")\r\n} catch (err) {}\r\n}\r\n\r\n\r\nconst deleteplace=async()=>{\r\n  try {\r\n    await sendRequest(\r\n      process.env.REACT_APP_BACKEND_URL +`/places/${placeId}`,\r\n      'DELETE',\r\n      null,\r\n      {\r\n        Authorization: 'Bearer ' + auth.token\r\n      }\r\n      );\r\n    // auth.delet()\r\n    navigate(\"/sellerlogin\")\r\n  } catch (err) {}\r\n}\r\n\r\n  // if(loadedUsers.length === 0){\r\n  //   return (\r\n  //     <div style={{margin:\"100px\"}}>\r\n  //       <Card>\r\n  //         <h2>No users found.</h2>\r\n  //       </Card>\r\n  //     </div>)\r\n  // }\r\n\r\n\r\n\r\n  const nameinputonclasses= nameinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const titleinputonclasses= titleinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const descriptioninputonclasses= descriptioninputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const priceinputonclasses= priceinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  return (\r\n    <>    \r\n    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n\r\n        <h2>Upload New Products</h2>\r\n\r\n\r\n    <div className='form_input_div'>\r\n    <form onSubmit={submithandler}>\r\n\r\n      <div className={nameinputonclasses}>\r\n      <Input\r\n      id=\"NAME\"\r\n      type='text'\r\n        ref={nameref}\r\n        onChange={namechangehandler}\r\n        onBlur={nameblurhandler}\r\n        value={nameinput || loadedUsers.name}\r\n      />\r\n      {nameinputisvalid && <p>enter valid name</p>}\r\n      </div>\r\n\r\n      <div className={titleinputonclasses}>\r\n      <Input\r\n      id=\"TITLE\"\r\n      type= 'text'\r\n        ref={titleref}\r\n        onChange={titlechangehandler}\r\n        onBlur={titleblurhandler}\r\n        value={titleinput || loadedUsers.title}\r\n        \r\n      />\r\n      {titleinputisvalid && <p>enter valid title</p>}\r\n      </div>\r\n      \r\n      \r\n      <div className={descriptioninputonclasses}>\r\n      <Input\r\n      id=\"DESCRIPTION\"\r\n      type='text'\r\n        ref={descriptionref}\r\n        onChange={descriptionchangehandler}\r\n        onBlur={descriptionblurhandler}\r\n        value={descriptioninput || loadedUsers.description}\r\n      />\r\n      {descriptioninputisvalid && <p>enter valid description</p>}\r\n      </div>\r\n\r\n      <div className={priceinputonclasses}>\r\n      <Input\r\n      id=\"PRICE\"\r\n      type='number'\r\n        ref={priceref}\r\n        onChange={pricechangehandler}\r\n        onBlur={priceblurhandler}\r\n        value={priceinput || loadedUsers.price}\r\n      />\r\n      {priceinputisvalid && <p>enter valid price</p>}\r\n      </div>\r\n      \r\n      <Button disabled={!formisvalid}>Update</Button>\r\n      {/* <Button to ='/sellerlogin'>Edit</Button> */}\r\n      <Button onClick ={deleteplace}>Delete</Button>\r\n    </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nimport Forminput from '../component/Updatesellerproduct/Forminput'\r\n\r\nconst Updatesellerproduct = () => {\r\n  return (\r\n    <>\r\n        <Forminput/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Updatesellerproduct\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks"],"names":["useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","navigate","useNavigate","placeId","useParams","pid","useCustomhooks","val","trim","nameinput","value","enternameisvalid","entervalueisvalid","nameinputisvalid","haserror","namechangehandler","valuechangehandler","nameblurhandler","valueblurhandler","resetname","reset","titleinput","entertitleisvalid","titleinputisvalid","titlechangehandler","titleblurhandler","resettitle","descriptioninput","enterdescriptionisvalid","descriptioninputisvalid","descriptionchangehandler","descriptionblurhandler","resetdescription","priceinput","enterpriceisvalid","priceinputisvalid","pricechangehandler","priceblurhandler","resetprice","nameref","useRef","titleref","descriptionref","priceref","formisvalid","useEffect","sendrequest","process","responseData","place","console","log","submithandler","event","preventDefault","JSON","stringify","name","title","description","price","Authorization","token","deleteplace","nameinputonclasses","titleinputonclasses","descriptioninputonclasses","priceinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","className","onSubmit","Input","id","type","ref","onChange","onBlur","Button","disabled","onClick","props","htmlFor","style","width","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","state","action","validatevalue","useReducer","inputstate","dispatch","target"],"sourceRoot":""}