{"version":3,"file":"static/js/394.44019d55.chunk.js","mappings":"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","sources":["Seller/component/registerform/Forminput.jsx","Seller/pages/Register.js","shared/components/FormElements/Input.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx"],"sourcesContent":["import React, { useContext } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\n\r\nconst Forminput = () => {  \r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth= useContext(AuthContext)\r\nconst navigate= useNavigate()\r\nconst{  \r\n  value:nameinput,\r\n  entervalueisvalid:enternameisvalid,\r\n  haserror:nameinputisvalid,\r\n  valuechangehandler:namechangehandler,\r\n  valueblurhandler:nameblurhandler,\r\n  reset:resetname\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:emailinput,\r\n  entervalueisvalid:enteremailisvalid,\r\n  haserror:emailinputisvalid,\r\n  valuechangehandler:emailchangehandler,\r\n  valueblurhandler:emailblurhandler,  \r\n  reset:resetemail\r\n} =useCustomhooks(val=>val.includes(\"@\"))\r\n\r\nconst{  \r\n  value:mobileinput,\r\n  entervalueisvalid:entermobileisvalid,\r\n  haserror:mobileinputisvalid,\r\n  valuechangehandler:mobilechangehandler,\r\n  valueblurhandler:mobileblurhandler,  \r\n  reset:resetmobile\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:passwordinput,\r\n  entervalueisvalid:enterpasswordisvalid,\r\n  haserror:passwordinputisvalid,\r\n  valuechangehandler:passwordchangehandler,\r\n  valueblurhandler:passwordblurhandler,  \r\n  reset:resetpassword\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\n\r\nconst nameref= useRef()\r\nconst emailref= useRef()\r\nconst mobileref= useRef()\r\nconst passwordref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enternameisvalid && enteremailisvalid && entermobileisvalid && enterpasswordisvalid ){\r\n  formisvalid=true\r\n}\r\n\r\n\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    // console.log(nameref.current.value)\r\n    \r\nif(!enternameisvalid){\r\n  return;  \r\n}\r\nif(!enteremailisvalid){\r\n  return;  \r\n}\r\nif(!entermobileisvalid){\r\n  return;  \r\n}\r\nif(!enterpasswordisvalid){\r\n  return;  \r\n}\r\nresetname()\r\nresetemail()\r\nresetmobile()\r\nresetpassword()\r\n\r\ntry {\r\n  const responseData = await sendRequest(\r\n    process.env.REACT_APP_BACKEND_URL +'/users/signup',\r\n    'POST',\r\n    JSON.stringify({\r\n      email: emailinput,\r\n      name: nameinput,\r\n      mobile: mobileinput,\r\n      password: passwordinput\r\n    }),\r\n    {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  );\r\n  // auth.login(responseData.user.id);\r\n  auth.login(responseData.userId, responseData.token);\r\n  navigate(\"/sellerlogin\")\r\n} catch (err) {}\r\n}\r\n\r\n\r\n\r\n  const nameinputonclasses= nameinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const mobileinputonclasses= mobileinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const emailinputonclasses= emailinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const passwordinputonclasses= passwordinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  return (\r\n    <>    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n        {\r\n          !auth.isLoggedIn && <h2>Signup Required</h2>\r\n        }\r\n        \r\n\r\n        {\r\n          auth.isLoggedIn && <h2 style={{textDecoration:\"none\"}}>Hello {auth.userName}</h2>\r\n        }\r\n       \r\n\r\n    <div className='form_input_div'>\r\n\r\n    {\r\n      !auth.isLoggedIn &&\r\n    \r\n    <form onSubmit={submithandler}>\r\n\r\n      <div className={nameinputonclasses}>\r\n      <Input\r\n      id=\"NAME\"\r\n      type='text'\r\n        ref={nameref}\r\n        onChange={namechangehandler}\r\n        onBlur={nameblurhandler}\r\n        value={nameinput}\r\n      />\r\n      {nameinputisvalid && <p>enter valid name</p>}\r\n      </div>\r\n\r\n      <div className={emailinputonclasses}>\r\n      <Input\r\n      id=\"EMAIL\"\r\n      type= 'email'\r\n        ref={emailref}\r\n        onChange={emailchangehandler}\r\n        onBlur={emailblurhandler}\r\n        value={emailinput}\r\n      />\r\n      {emailinputisvalid && <p>enter valid email</p>}\r\n      </div>\r\n      \r\n      \r\n      <div className={mobileinputonclasses}>\r\n      <Input\r\n      id=\"MOBILE\"\r\n      type='number'\r\n        ref={mobileref}\r\n        onChange={mobilechangehandler}\r\n        onBlur={mobileblurhandler}\r\n        value={mobileinput}\r\n      />\r\n      {mobileinputisvalid && <p>enter valid mobile</p>}\r\n      </div>\r\n\r\n      <div className={passwordinputonclasses}>\r\n      <Input\r\n      id=\"PASSWORD\"\r\n      type='password'\r\n        ref={passwordref}\r\n        onChange={passwordchangehandler}\r\n        onBlur={passwordblurhandler}\r\n        value={passwordinput}\r\n      />\r\n      {passwordinputisvalid && <p>enter valid password</p>}\r\n      </div>\r\n      <Button disabled={!formisvalid}>Signup</Button>\r\n      \r\n      {!auth.isLoggedIn &&<Button to ='/sellerlogin'>Login</Button>}\r\n      </form>\r\n    }\r\n      <div className='loginbuttonpannel'>\r\n      \r\n{\r\n  auth.isLoggedIn && <Button to={`/${auth.userId}/sellerupdate`}>Edit Seller</Button>\r\n}\r\n{\r\n  auth.isLoggedIn && <Button to='/sellernewproduct'>Upload Products</Button>\r\n}\r\n{\r\n  auth.isLoggedIn && <Button to ={`/${auth.userId}/selleralluploadedproduct`}>View Uploaded Products</Button>\r\n}\r\n{\r\n  auth.isLoggedIn && <Button to ={`/${auth.userId}/productcreator`}>View Order</Button>\r\n}\r\n</div>\r\n    \r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nimport Forminput from '../component/registerform/Forminput'\r\n\r\nconst Register = () => {\r\n  return (\r\n    <>\r\n        <Forminput/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks"],"names":["useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","navigate","useNavigate","useCustomhooks","val","trim","nameinput","value","enternameisvalid","entervalueisvalid","nameinputisvalid","haserror","namechangehandler","valuechangehandler","nameblurhandler","valueblurhandler","resetname","reset","includes","emailinput","enteremailisvalid","emailinputisvalid","emailchangehandler","emailblurhandler","resetemail","mobileinput","entermobileisvalid","mobileinputisvalid","mobilechangehandler","mobileblurhandler","resetmobile","passwordinput","enterpasswordisvalid","passwordinputisvalid","passwordchangehandler","passwordblurhandler","resetpassword","nameref","useRef","emailref","mobileref","passwordref","formisvalid","submithandler","event","preventDefault","process","JSON","stringify","email","name","mobile","password","responseData","login","userId","token","nameinputonclasses","mobileinputonclasses","emailinputonclasses","passwordinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","isLoggedIn","style","textDecoration","userName","className","onSubmit","Input","id","type","ref","onChange","onBlur","Button","disabled","to","props","htmlFor","width","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onClick","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","state","action","validatevalue","useReducer","inputstate","dispatch","target"],"sourceRoot":""}