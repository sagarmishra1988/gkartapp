{"version":3,"file":"static/js/55.d2e739f5.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","product/component/Sellernewproduct/Forminput.jsx","product/pages/Sellernewproduct.js","shared/components/FormElements/Input.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-custom-hooks.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n    \r\n    // props.onChange();\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useContext } from 'react'\r\nimport Input from '../../../shared/components/FormElements/Input'\r\nimport Button from '../../../shared/components/FormElements/Button'\r\nimport './Forminput.css'\r\nimport { useRef } from 'react'\r\nimport useCustomhooks from '../../../shared/hooks/form-custom-hooks'\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook'\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner'\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AuthContext } from '../../../shared/context/auth-context'\r\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload'\r\nimport { useForm } from '../../../shared/hooks/form-hook';\r\n\r\nconst Forminput = () => {  \r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth= useContext(AuthContext)\r\nconst navigate= useNavigate()\r\n\r\nconst [formState, inputHandler] = useForm(\r\n  {\r\n    // title: {\r\n    //   value: '',\r\n    //   isValid: false\r\n    // },\r\n    // description: {\r\n    //   value: '',\r\n    //   isValid: false\r\n    // },\r\n    // address: {\r\n    //   value: '',\r\n    //   isValid: false\r\n    // },\r\n    image: {\r\n      value: null,\r\n      isValid: false\r\n    }\r\n  },\r\n  false\r\n);\r\n\r\n\r\n\r\nconst{  \r\n  value:nameinput,\r\n  entervalueisvalid:enternameisvalid,\r\n  haserror:nameinputisvalid,\r\n  valuechangehandler:namechangehandler,\r\n  valueblurhandler:nameblurhandler,\r\n  reset:resetname\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:titleinput,\r\n  entervalueisvalid:entertitleisvalid,\r\n  haserror:titleinputisvalid,\r\n  valuechangehandler:titlechangehandler,\r\n  valueblurhandler:titleblurhandler,  \r\n  reset:resettitle\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\nconst{  \r\n  value:descriptioninput,\r\n  entervalueisvalid:enterdescriptionisvalid,\r\n  haserror:descriptioninputisvalid,\r\n  valuechangehandler:descriptionchangehandler,\r\n  valueblurhandler:descriptionblurhandler,  \r\n  reset:resetdescription\r\n} =useCustomhooks(val=>val.trim() !==\"\")\r\n\r\n\r\n// const{  \r\n//   value:imageinput,\r\n//   entervalueisvalid:enterimageisvalid,\r\n//   haserror:imageinputisvalid,\r\n//   valuechangehandler:imagechangehandler,\r\n//   valueblurhandler:imageblurhandler,  \r\n//   reset:resetimage\r\n// } =useCustomhooks(val=>val.trim() ===\"\")\r\n\r\nconst{  \r\n  value:priceinput,\r\n  entervalueisvalid:enterpriceisvalid,\r\n  haserror:priceinputisvalid,\r\n  valuechangehandler:pricechangehandler,\r\n  valueblurhandler:priceblurhandler,  \r\n  reset:resetprice\r\n} = useCustomhooks(val=>val.trim() !==\"\")\r\n\r\n\r\nconst nameref= useRef()\r\nconst titleref= useRef()\r\nconst descriptionref= useRef()\r\nconst priceref= useRef()\r\n// const imageref= useRef()\r\n\r\nlet formisvalid= false\r\nif(enternameisvalid && entertitleisvalid && enterdescriptionisvalid && enterpriceisvalid \r\n  // && imageinputisvalid\r\n  ){\r\n  formisvalid=true\r\n}\r\n\r\n\r\nconst submithandler= async(event)=>{\r\n  event.preventDefault();\r\n    // console.log(nameref.current.value)\r\n    \r\nif(!enternameisvalid){\r\n  return;  \r\n}\r\nif(!entertitleisvalid){\r\n  return;  \r\n}\r\nif(!enterdescriptionisvalid){\r\n  return;  \r\n}\r\nif(!enterpriceisvalid){\r\n  return;  \r\n}\r\n// if(!enterimageisvalid){\r\n//   return;  \r\n// }\r\nresetname()\r\nresettitle()\r\nresetdescription()\r\nresetprice()\r\n// resetimage()\r\n\r\n// try {\r\n  // const responseData = await sendRequest(\r\n  //   'http://localhost:8000/api/places',\r\n  //   'POST',\r\n  //   JSON.stringify({      \r\n  //     name: nameinput,\r\n  //     title:titleinput,\r\n  //     description: descriptioninput,\r\n  //     price: priceinput,\r\n  //     creator:auth.userId\r\n  //   }),\r\n  //   {\r\n  //     'Content-Type': 'application/json'\r\n  //   }\r\n  // );\r\n   // auth.login(responseData.user.id);\r\n  //  navigate(\"/sellernewproduct\")\r\n  // } catch (err) {}\r\n  // }\r\n\r\n  try {\r\n  const formData = new FormData();\r\n  formData.append('title', titleinput);\r\n  formData.append('description', descriptioninput);\r\n  formData.append('name', nameinput);\r\n  formData.append('price', priceinput);\r\n  // formData.append('creator', auth.userId);\r\n  formData.append('image', formState.inputs.image.value);\r\n  // await sendRequest('http://localhost:8000/api/places', 'POST', formData);  \r\n  await sendRequest(process.env.REACT_APP_BACKEND_URL +'/places', 'POST', formData,{\r\n    Authorization: 'Bearer ' + auth.token\r\n  });\r\n  // auth.login(responseData.user.id);\r\n  // console.log(auth.token)\r\n  navigate(\"/sellernewproduct\")\r\n  \r\n} catch (err) {}\r\n}\r\n\r\n\r\n  const nameinputonclasses= nameinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const titleinputonclasses= titleinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const descriptioninputonclasses= descriptioninputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  const priceinputonclasses= priceinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  // const imageinputonclasses= imageinputisvalid ? \"form-control invalid\" : \"form-control\"\r\n  \r\n  return (\r\n    <>    \r\n    <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Upload New Products</h2>\r\n\r\n    <div className='form_input_div'>\r\n    <form onSubmit={submithandler}>\r\n\r\n      <div className={nameinputonclasses}>\r\n\r\n      {/* <Input\r\n      id=\"NAME\"\r\n      type='text'\r\n        ref={nameref}\r\n        onChange={namechangehandler}\r\n        onBlur={nameblurhandler}\r\n        value={nameinput}      \r\n\r\n      /> */}\r\n      <label htmlFor=\"NAME\">NAME</label>\r\n      <select id=\"NAME\" ref={nameref} onfocus=\"focusFunction(this)\" onBlur={nameblurhandler} onChange={namechangehandler} value={nameinput}>;\r\n\t\t\t<option style={{\"fontWeigh\":\"bold\", width:\"100%\"}}>SELECT</option>\r\n      <option>FOOD</option>\r\n\t\t\t<option>CLOTH</option>\r\n\t\t\t<option>EV</option>\r\n\t\t\t<option>INFRASTRACTURE</option>\r\n      <option>DRON</option>\r\n\t\t\t<option>DECORATION</option>\r\n\t\t</select>\r\n      {nameinputisvalid && <p>enter valid name</p>}\r\n      </div>\r\n\r\n      <div className={titleinputonclasses}>\r\n      \r\n      <Input\r\n      id=\"TITLE\"\r\n      type= 'text'\r\n        ref={titleref}\r\n        onChange={titlechangehandler}\r\n        onBlur={titleblurhandler}\r\n        value={titleinput}\r\n        \r\n      />\r\n      {titleinputisvalid && <p>enter valid title</p>}\r\n      </div>\r\n      \r\n      \r\n      <div className={descriptioninputonclasses}>\r\n      <Input\r\n      id=\"DESCRIPTION\"\r\n      type='text'\r\n        ref={descriptionref}\r\n        onChange={descriptionchangehandler}\r\n        onBlur={descriptionblurhandler}\r\n        value={descriptioninput}\r\n      />\r\n      {descriptioninputisvalid && <p>enter valid description</p>}\r\n      </div>\r\n\r\n      <div className={priceinputonclasses}>\r\n      <Input\r\n      id=\"PRICE\"\r\n      type='number'\r\n        ref={priceref}\r\n        onChange={pricechangehandler}\r\n        onBlur={priceblurhandler}\r\n        value={priceinput}\r\n      />\r\n      {priceinputisvalid && <p>enter valid price</p>}\r\n      </div>\r\n\r\n      \r\n      {/* <div className={imageinputonclasses}> */}\r\n      <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />        \r\n      {/* {imageinputisvalid && <p>enter valid image</p>}\r\n      </div> */}\r\n      \r\n\r\n      <Button disabled={!formisvalid}>Upload New Product</Button>\r\n      <Button to ={`/${auth.userId}/selleralluploadedproduct`}>View Uploaded Products</Button>\r\n      {/* <Button to ='/sellerlogin'>Delete</Button> */}\r\n    </form>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nimport Forminput from '../component/Sellernewproduct/Forminput'\r\n\r\nconst Sellernewproduct = () => {\r\n  return (\r\n    <>\r\n        <Forminput/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sellernewproduct\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>   \r\n    <label htmlFor={props.id}>{props.id}</label>\r\n    <input style={{width:\"100%\"}}\r\n    type={props.type} \r\n    id={props.id}\r\n    onChange={props.onChange}    \r\n    ref={props.ref}\r\n    onBlur={props.onBlur}     \r\n    value={props.value}\r\n    />\r\n      \r\n  \r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","\r\n// practice1 \r\nimport { useReducer } from \"react\"\r\n// import { useState } from \"react\"\r\n\r\nconst initialstate={\r\nvalue:'',\r\nisTouched:false\r\n}\r\n\r\nconst reducerfunction=(state, action)=>{\r\n    if(action.type=== 'input'){\r\n     return {value: action.value, isTouched: state.isTouched}\r\n    }\r\n    if(action.type=== 'blur'){\r\n    return  {isTouched:true, value:state.value}\r\n    }\r\n    if(action.type=== 'reset'){\r\n      return{ isTouched:false, value:''}\r\n    }\r\n    return reducerfunction;\r\n  }\r\n  \r\nconst useCustomhooks=(validatevalue)=>{\r\n  \r\n  const[inputstate, dispatch]= useReducer(reducerfunction, initialstate)\r\n  // const[valueinput, setvalueinput]= useState('')\r\n  // const[valueistouched, setvalueistouched]= useState(false)\r\n  const entervalueisvalid = validatevalue(inputstate.value)\r\n  const haserror= !entervalueisvalid && inputstate.isTouched\r\n\r\n\r\n  const valuechangehandler=event=>{\r\n    // setvalueinput(event.target.value)\r\n    dispatch({type:'input', value:event.target.value})\r\n  }\r\n  \r\n  const valueblurhandler=()=>{\r\n    // setvalueistouched(true)\r\n    dispatch({type:'blur'})\r\n    }\r\n    \r\n    const reset=()=>{\r\n      // setvalueinput('')\r\n      // setvalueistouched(false)\r\n      dispatch({type:\"reset\"})\r\n  }\r\n  return{\r\n   value: inputstate.value,\r\n    entervalueisvalid,\r\n    haserror,\r\n    valuechangehandler,\r\n    valueblurhandler,\r\n    reset\r\n  }\r\n}\r\nexport default useCustomhooks"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","formReducer","state","action","formIsValid","inputId","inputs","value","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","navigate","useNavigate","initialInputs","initialFormValidity","useReducer","formState","dispatch","useCallback","inputData","formValidity","useForm","image","inputHandler","useCustomhooks","val","trim","nameinput","enternameisvalid","entervalueisvalid","nameinputisvalid","haserror","namechangehandler","valuechangehandler","nameblurhandler","valueblurhandler","resetname","reset","titleinput","entertitleisvalid","titleinputisvalid","titlechangehandler","titleblurhandler","resettitle","descriptioninput","enterdescriptionisvalid","descriptioninputisvalid","descriptionchangehandler","descriptionblurhandler","resetdescription","priceinput","enterpriceisvalid","priceinputisvalid","pricechangehandler","priceblurhandler","resetprice","nameref","titleref","descriptionref","priceref","formisvalid","submithandler","preventDefault","formData","FormData","append","process","Authorization","token","nameinputonclasses","titleinputonclasses","descriptioninputonclasses","priceinputonclasses","ErrorModal","onClear","LoadingSpinner","asOverlay","onSubmit","htmlFor","onfocus","onBlur","width","Input","disabled","to","userId","ModalOverlay","content","headerClass","header","contentClass","children","footerClass","footer","ReactDOM","document","getElementById","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","initialstate","isTouched","reducerfunction","validatevalue","inputstate"],"sourceRoot":""}